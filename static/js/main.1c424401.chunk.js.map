{"version":3,"sources":["ListContacts.js","ImageInput.js","CreateContact.js","utils/ContactsAPI.js","App.js","index.js"],"names":["ListContacts","state","query","updateQuery","_this","setState","trim","clearQuery","showingContacts","_this2","this","_this$props","props","contacts","onDeleteContact","pic","match","RegExp","excapeRegExp","filter","contact","test","name","sort","sortBy","react_default","a","createElement","className","type","placeholder","value","onChange","e","target","react_router_dom","to","length","onClick","map","key","id","style","backgroundImage","concat","avatarURL","email","Component","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","event","result","readAsDataURL","resizeImage","imageURL","canvas","maxHeight","image","Image","context","getContext","height","width","clearRect","drawImage","toDataURL","src","ImageInput","handleFileChange","files","then","originalURL","url","handleFormReset","document","fileInput","form","addEventListener","removeEventListener","position","backgroundRepeat","backgroundPosition","backgroundSize","ref","node","top","left","opacity","React","CreateContact","handleSubmit","preventDefault","values","serializeForm","hash","onCreateContact","onSubmit","src_ImageInput","api","process","REACT_APP_CONTACTS_API_URL","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","remove","fetch","method","res","json","data","create","body","Object","objectSpread","Content-Type","JSON","stringify","App","screen","removeContact","c","ContactsApi","createContact","results","picture","thumbnail","_this3","react_router","exact","path","render","src_ListContacts","_ref","history","src_CreateContact","push","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.1c424401.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport excapeRegExp from \"escape-string-regexp\";\r\nimport sortBy from \"sort-by\";\r\n\r\nclass ListContacts extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    query: \"\"\r\n  };\r\n\r\n  updateQuery = query => {\r\n    this.setState({ query: query.trim() });\r\n  };\r\n\r\n  clearQuery = query => {\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact, pic } = this.props;\r\n    const { query } = this.state;\r\n\r\n    let showingContacts;\r\n    if (query) {\r\n      const match = new RegExp(excapeRegExp(query), \"i\");\r\n      showingContacts = contacts.filter(contact => match.test(contact.name));\r\n    } else {\r\n      showingContacts = contacts;\r\n    }\r\n\r\n    showingContacts.sort(sortBy(\"name\"));\r\n\r\n    return (\r\n      <div className=\"list-contacts\">\r\n        <div className=\"list-contacts-top\">\r\n          <input\r\n            className=\"search-contacts\"\r\n            type=\"text\"\r\n            placeholder=\"Search contacts\"\r\n            value={this.state.query}\r\n            onChange={e => this.updateQuery(e.target.value)}\r\n          />\r\n          <Link to=\"./create\" className=\"add-contact\">\r\n            Add contact\r\n          </Link>\r\n        </div>\r\n\r\n        {showingContacts.length !== contacts.length && (\r\n          <div className=\"showing-contacts\">\r\n            <span>\r\n              Now showing {showingContacts.length} of {contacts.length} total\r\n            </span>\r\n            <button onClick={this.clearQuery}>Show all</button>\r\n          </div>\r\n        )}\r\n\r\n        <ol className=\"contact-list\">\r\n          {showingContacts.map(contact => (\r\n            <li key={contact.id} className=\"contact-list-item\">\r\n              <div\r\n                className=\"contact-avatar\"\r\n                style={{ backgroundImage: `url(${contact.avatarURL})` }}\r\n              />\r\n              <div className=\"contact-details\">\r\n                <p>{contact.name}</p>\r\n                <p>{contact.email}</p>\r\n              </div>\r\n              <button\r\n                className=\"contact-remove\"\r\n                onClick={() => onDeleteContact(contact)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const ListContacts = props => {\r\n//   const { contacts, onDeleteContact } = props;\r\n//   return (\r\n//     <div className=\"list-contacts\">\r\n//       <div className=\"list-contacts-top\">\r\n//         <input\r\n//           className=\"search-contacts\"\r\n//           type=\"text\"\r\n//           placeholder=\"Search contacts\"\r\n//         />\r\n//       </div>\r\n//       <ol className=\"contact-list\">\r\n//         {contacts.map(contact => (\r\n//           <li key={contact.id} className=\"contact-list-item\">\r\n//             <div\r\n//               className=\"contact-avatar\"\r\n//               style={{ backgroundImage: `url(${contact.avatarURL})` }}\r\n//             />\r\n//             <div className=\"contact-details\">\r\n//               <p>{contact.name}</p>\r\n//               <p>{contact.email}</p>\r\n//             </div>\r\n//             <button\r\n//               onClick={() => onDeleteContact(contact)}\r\n//               className=\"contact-remove\"\r\n//             >\r\n//               Remove\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ol>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ListContacts.propTypes = {\r\n//   contacts: PropTypes.array.isRequired,\r\n//   onDeleteContact: PropTypes.func.isRequired\r\n// };\r\n\r\nexport default ListContacts;\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst readFileAsDataURL = (file) =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  })\n\nconst resizeImage = (imageURL, canvas, maxHeight) =>\n  new Promise(resolve => {\n    const image = new Image()\n\n    image.onload = () => {\n      const context = canvas.getContext('2d')\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height\n        image.height = maxHeight\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height)\n      canvas.width = image.width\n      canvas.height = image.height\n\n      context.drawImage(image, 0, 0, image.width, image.height)\n\n      resolve(canvas.toDataURL('image/jpeg'))\n    }\n\n    image.src = imageURL\n  })\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\nclass ImageInput extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    maxHeight: PropTypes.number\n  }\n\n  state = {\n    value: ''\n  }\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0]\n\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(originalURL => {\n        resizeImage(originalURL, this.canvas, this.props.maxHeight).then(url => {\n          this.setState({ value: url })\n        })\n      })\n    } else {\n      this.setState({ value: '' })\n    }\n  }\n\n  handleFormReset = () => {\n    this.setState({ value: '' })\n  }\n\n  componentDidMount() {\n    this.canvas = document.createElement('canvas')\n    this.fileInput.form.addEventListener('reset', this.handleFormReset)\n  }\n\n  componentWillUnmount() {\n    this.fileInput.form.removeEventListener('reset', this.handleFormReset)\n  }\n\n  render() {\n    const { className, name } = this.props\n    const { value } = this.state\n\n    const style = {\n      position: 'relative'\n    }\n\n    if (value) {\n      style.backgroundImage = `url(\"${value}\")`\n      style.backgroundRepeat = 'no-repeat'\n      style.backgroundPosition = 'center'\n      style.backgroundSize = 'cover'\n    }\n\n    return (\n      <div className={className} style={style}>\n        <input type=\"hidden\" name={name} value={value} />\n        <input\n          ref={node => this.fileInput = node}\n          type=\"file\"\n          onChange={this.handleFileChange}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ImageInput\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageInput from \"./ImageInput\";\r\nimport serializeForm from \"form-serialize\";\r\n\r\nclass CreateContact extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const values = serializeForm(e.target, { hash: true });\r\n    if (this.props.onCreateContact) {\r\n      this.props.onCreateContact(values);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link className=\"close-create-contact\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <form onSubmit={this.handleSubmit} className=\"create-contact-form\">\r\n          <ImageInput\r\n            className=\"create-contact-avatar-input\"\r\n            name=\"avatarURL\"\r\n            maxHeight={64}\r\n          />\r\n          <div className=\"create-contact-details\">\r\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" />\r\n            <input type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n            <button>Add Contact</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateContact;\r\n","const api = process.env.REACT_APP_CONTACTS_API_URL || \"http://localhost:5001\";\n\nlet token = localStorage.token;\n\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token\n};\n\nexport const getAll = () =>\n  fetch(`${api}/contacts`, { headers })\n    .then(res => res.json())\n    .then(data => data.contacts);\n\nexport const remove = contact =>\n  fetch(`${api}/contacts/${contact.id}`, { method: \"DELETE\", headers })\n    .then(res => res.json())\n    .then(data => data.contact);\n\nexport const create = body =>\n  fetch(`${api}/contacts`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  }).then(res => res.json());\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport ListContacts from \"./ListContacts\";\nimport CreateContact from \"./CreateContact\";\nimport * as ContactsApi from \"./utils/ContactsAPI\";\n\n//let view;\n\n//state = { data: \"\" };\n\nclass App extends Component {\n  state = {\n    data: \"\",\n    contacts: [],\n    screen: \"list\" // list, create\n  };\n\n  componentDidMount() {\n    ContactsApi.getAll().then(contacts => {\n      this.setState({ contacts });\n    });\n\n    const url = \"https://randomuser.me/api/\";\n    const options = {\n      method: \"GET\"\n    };\n    fetch(`${url}`, options)\n      .then(res => res.json())\n      .then(res => this.setState({ data: res.results[0].picture.thumbnail }));\n  }\n\n  removeContact = contact => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(c => c.id !== contact.id)\n    }));\n\n    ContactsApi.remove(contact);\n  };\n\n  createContact = contact => {\n    ContactsApi.create(contact).then(contact => {\n      this.setState(state => ({\n        contacts: state.contacts.concat([contact])\n      }));\n    });\n  };\n\n  // navigateToCreate = () => {\n  //   this.setState({\n  //     screen: \"create\"\n  //   });\n  // };\n\n  render() {\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <ListContacts\n              contacts={this.state.contacts}\n              onDeleteContact={this.removeContact}\n              pic={this.state.data}\n              //onNavigate={this.navigateToCreate}\n            />\n          )}\n        />\n        <Route\n          path=\"/create\"\n          render={({ history }) => (\n            <CreateContact\n              onCreateContact={contact => {\n                this.createContact(contact);\n                history.push(\"/\");\n              }}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}